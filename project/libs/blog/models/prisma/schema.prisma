generator client {
  provider = "prisma-client-js"
  output   = "../../../../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id        String     @id @default(uuid())
  originId  String?    @map("origin_id")
  type      Type
  content   Json
  createdAt DateTime   @default(now()) @map("created_at")
  updatedAt DateTime   @updatedAt @map("updated_at")
  userId    String     @map("user_id")
  authorId  String?    @map("author_id")
  published Boolean    @default(true)
  reposted  Boolean    @default(false)
  tags      Tag[]
  comments  Comment[]
  likes     Favorite[]

  @@index([userId, id])
  @@map("posts")
}

model Tag {
  name  String @id @unique
  posts Post[]

  @@map("tags")
}

model Comment {
  id        String   @id @default(uuid())
  text      String
  authorId  String   @map("author_id")
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  postId    String   @map("post_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("comments")
}

model Favorite {
  id     String @id @default(uuid())
  post   Post   @relation(fields: [postId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  postId String @map("post_id")
  userId String @map("user_id")

  @@map("favorites")
}

enum Type {
  TEXT
  VIDEO
  QUOTA
  PHOTO
  LINK
}
